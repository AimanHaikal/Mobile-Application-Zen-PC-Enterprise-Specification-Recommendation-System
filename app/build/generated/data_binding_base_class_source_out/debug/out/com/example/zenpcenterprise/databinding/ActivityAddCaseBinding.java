// Generated by view binder compiler. Do not edit!
package com.example.zenpcenterprise.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.zenpcenterprise.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddCaseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cancelCaseButton;

  @NonNull
  public final EditText editCaseMotherboardFormFactor;

  @NonNull
  public final EditText editCaseName;

  @NonNull
  public final EditText editCasePSUFormFactor;

  @NonNull
  public final EditText editCasePrice;

  @NonNull
  public final Button submitCaseButton;

  @NonNull
  public final TextView textAddCase;

  @NonNull
  public final TextView textCaseMotherboardFormFactor;

  @NonNull
  public final TextView textCaseName;

  @NonNull
  public final TextView textCasePSUFormFactor;

  @NonNull
  public final TextView textCasePrice;

  private ActivityAddCaseBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button cancelCaseButton, @NonNull EditText editCaseMotherboardFormFactor,
      @NonNull EditText editCaseName, @NonNull EditText editCasePSUFormFactor,
      @NonNull EditText editCasePrice, @NonNull Button submitCaseButton,
      @NonNull TextView textAddCase, @NonNull TextView textCaseMotherboardFormFactor,
      @NonNull TextView textCaseName, @NonNull TextView textCasePSUFormFactor,
      @NonNull TextView textCasePrice) {
    this.rootView = rootView;
    this.cancelCaseButton = cancelCaseButton;
    this.editCaseMotherboardFormFactor = editCaseMotherboardFormFactor;
    this.editCaseName = editCaseName;
    this.editCasePSUFormFactor = editCasePSUFormFactor;
    this.editCasePrice = editCasePrice;
    this.submitCaseButton = submitCaseButton;
    this.textAddCase = textAddCase;
    this.textCaseMotherboardFormFactor = textCaseMotherboardFormFactor;
    this.textCaseName = textCaseName;
    this.textCasePSUFormFactor = textCasePSUFormFactor;
    this.textCasePrice = textCasePrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddCaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddCaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_case, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddCaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelCaseButton;
      Button cancelCaseButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelCaseButton == null) {
        break missingId;
      }

      id = R.id.editCaseMotherboardFormFactor;
      EditText editCaseMotherboardFormFactor = ViewBindings.findChildViewById(rootView, id);
      if (editCaseMotherboardFormFactor == null) {
        break missingId;
      }

      id = R.id.editCaseName;
      EditText editCaseName = ViewBindings.findChildViewById(rootView, id);
      if (editCaseName == null) {
        break missingId;
      }

      id = R.id.editCasePSUFormFactor;
      EditText editCasePSUFormFactor = ViewBindings.findChildViewById(rootView, id);
      if (editCasePSUFormFactor == null) {
        break missingId;
      }

      id = R.id.editCasePrice;
      EditText editCasePrice = ViewBindings.findChildViewById(rootView, id);
      if (editCasePrice == null) {
        break missingId;
      }

      id = R.id.submitCaseButton;
      Button submitCaseButton = ViewBindings.findChildViewById(rootView, id);
      if (submitCaseButton == null) {
        break missingId;
      }

      id = R.id.textAddCase;
      TextView textAddCase = ViewBindings.findChildViewById(rootView, id);
      if (textAddCase == null) {
        break missingId;
      }

      id = R.id.textCaseMotherboardFormFactor;
      TextView textCaseMotherboardFormFactor = ViewBindings.findChildViewById(rootView, id);
      if (textCaseMotherboardFormFactor == null) {
        break missingId;
      }

      id = R.id.textCaseName;
      TextView textCaseName = ViewBindings.findChildViewById(rootView, id);
      if (textCaseName == null) {
        break missingId;
      }

      id = R.id.textCasePSUFormFactor;
      TextView textCasePSUFormFactor = ViewBindings.findChildViewById(rootView, id);
      if (textCasePSUFormFactor == null) {
        break missingId;
      }

      id = R.id.textCasePrice;
      TextView textCasePrice = ViewBindings.findChildViewById(rootView, id);
      if (textCasePrice == null) {
        break missingId;
      }

      return new ActivityAddCaseBinding((ConstraintLayout) rootView, cancelCaseButton,
          editCaseMotherboardFormFactor, editCaseName, editCasePSUFormFactor, editCasePrice,
          submitCaseButton, textAddCase, textCaseMotherboardFormFactor, textCaseName,
          textCasePSUFormFactor, textCasePrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.zenpcenterprise.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.zenpcenterprise.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemCpuBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView coreTextView;

  @NonNull
  public final TextView cpuFrequencyTextView;

  @NonNull
  public final TextView cpuNameTextView;

  @NonNull
  public final TextView cpuPriceTextView;

  @NonNull
  public final TextView cpuSocketTextView;

  @NonNull
  public final TextView listCPUFrequencyTextView;

  @NonNull
  public final TextView listCPUNameTextView;

  @NonNull
  public final TextView listCPUPriceTextView;

  @NonNull
  public final TextView listCPUSocketTextView;

  @NonNull
  public final TextView listCoreTextView;

  private ListItemCpuBinding(@NonNull CardView rootView, @NonNull TextView coreTextView,
      @NonNull TextView cpuFrequencyTextView, @NonNull TextView cpuNameTextView,
      @NonNull TextView cpuPriceTextView, @NonNull TextView cpuSocketTextView,
      @NonNull TextView listCPUFrequencyTextView, @NonNull TextView listCPUNameTextView,
      @NonNull TextView listCPUPriceTextView, @NonNull TextView listCPUSocketTextView,
      @NonNull TextView listCoreTextView) {
    this.rootView = rootView;
    this.coreTextView = coreTextView;
    this.cpuFrequencyTextView = cpuFrequencyTextView;
    this.cpuNameTextView = cpuNameTextView;
    this.cpuPriceTextView = cpuPriceTextView;
    this.cpuSocketTextView = cpuSocketTextView;
    this.listCPUFrequencyTextView = listCPUFrequencyTextView;
    this.listCPUNameTextView = listCPUNameTextView;
    this.listCPUPriceTextView = listCPUPriceTextView;
    this.listCPUSocketTextView = listCPUSocketTextView;
    this.listCoreTextView = listCoreTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemCpuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemCpuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_cpu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemCpuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coreTextView;
      TextView coreTextView = ViewBindings.findChildViewById(rootView, id);
      if (coreTextView == null) {
        break missingId;
      }

      id = R.id.cpuFrequencyTextView;
      TextView cpuFrequencyTextView = ViewBindings.findChildViewById(rootView, id);
      if (cpuFrequencyTextView == null) {
        break missingId;
      }

      id = R.id.cpuNameTextView;
      TextView cpuNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (cpuNameTextView == null) {
        break missingId;
      }

      id = R.id.cpuPriceTextView;
      TextView cpuPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (cpuPriceTextView == null) {
        break missingId;
      }

      id = R.id.cpuSocketTextView;
      TextView cpuSocketTextView = ViewBindings.findChildViewById(rootView, id);
      if (cpuSocketTextView == null) {
        break missingId;
      }

      id = R.id.listCPUFrequencyTextView;
      TextView listCPUFrequencyTextView = ViewBindings.findChildViewById(rootView, id);
      if (listCPUFrequencyTextView == null) {
        break missingId;
      }

      id = R.id.listCPUNameTextView;
      TextView listCPUNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (listCPUNameTextView == null) {
        break missingId;
      }

      id = R.id.listCPUPriceTextView;
      TextView listCPUPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (listCPUPriceTextView == null) {
        break missingId;
      }

      id = R.id.listCPUSocketTextView;
      TextView listCPUSocketTextView = ViewBindings.findChildViewById(rootView, id);
      if (listCPUSocketTextView == null) {
        break missingId;
      }

      id = R.id.listCoreTextView;
      TextView listCoreTextView = ViewBindings.findChildViewById(rootView, id);
      if (listCoreTextView == null) {
        break missingId;
      }

      return new ListItemCpuBinding((CardView) rootView, coreTextView, cpuFrequencyTextView,
          cpuNameTextView, cpuPriceTextView, cpuSocketTextView, listCPUFrequencyTextView,
          listCPUNameTextView, listCPUPriceTextView, listCPUSocketTextView, listCoreTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

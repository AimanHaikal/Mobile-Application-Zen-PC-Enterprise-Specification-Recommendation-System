// Generated by view binder compiler. Do not edit!
package com.example.zenpcenterprise.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.zenpcenterprise.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddGpuactivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cancelGPUButton;

  @NonNull
  public final EditText editCoreFrequency;

  @NonNull
  public final EditText editGPUName;

  @NonNull
  public final EditText editGPUPrice;

  @NonNull
  public final EditText editMemoryFrequency;

  @NonNull
  public final EditText editVRAM;

  @NonNull
  public final Button submitGPUButton;

  @NonNull
  public final TextView textAddGPU;

  @NonNull
  public final TextView textCoreFrequency;

  @NonNull
  public final TextView textGPUName;

  @NonNull
  public final TextView textGPUPrice;

  @NonNull
  public final TextView textMemoryFrequency;

  @NonNull
  public final TextView textVRAM;

  private ActivityAddGpuactivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button cancelGPUButton, @NonNull EditText editCoreFrequency,
      @NonNull EditText editGPUName, @NonNull EditText editGPUPrice,
      @NonNull EditText editMemoryFrequency, @NonNull EditText editVRAM,
      @NonNull Button submitGPUButton, @NonNull TextView textAddGPU,
      @NonNull TextView textCoreFrequency, @NonNull TextView textGPUName,
      @NonNull TextView textGPUPrice, @NonNull TextView textMemoryFrequency,
      @NonNull TextView textVRAM) {
    this.rootView = rootView;
    this.cancelGPUButton = cancelGPUButton;
    this.editCoreFrequency = editCoreFrequency;
    this.editGPUName = editGPUName;
    this.editGPUPrice = editGPUPrice;
    this.editMemoryFrequency = editMemoryFrequency;
    this.editVRAM = editVRAM;
    this.submitGPUButton = submitGPUButton;
    this.textAddGPU = textAddGPU;
    this.textCoreFrequency = textCoreFrequency;
    this.textGPUName = textGPUName;
    this.textGPUPrice = textGPUPrice;
    this.textMemoryFrequency = textMemoryFrequency;
    this.textVRAM = textVRAM;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddGpuactivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddGpuactivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_gpuactivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddGpuactivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelGPUButton;
      Button cancelGPUButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelGPUButton == null) {
        break missingId;
      }

      id = R.id.editCoreFrequency;
      EditText editCoreFrequency = ViewBindings.findChildViewById(rootView, id);
      if (editCoreFrequency == null) {
        break missingId;
      }

      id = R.id.editGPUName;
      EditText editGPUName = ViewBindings.findChildViewById(rootView, id);
      if (editGPUName == null) {
        break missingId;
      }

      id = R.id.editGPUPrice;
      EditText editGPUPrice = ViewBindings.findChildViewById(rootView, id);
      if (editGPUPrice == null) {
        break missingId;
      }

      id = R.id.editMemoryFrequency;
      EditText editMemoryFrequency = ViewBindings.findChildViewById(rootView, id);
      if (editMemoryFrequency == null) {
        break missingId;
      }

      id = R.id.editVRAM;
      EditText editVRAM = ViewBindings.findChildViewById(rootView, id);
      if (editVRAM == null) {
        break missingId;
      }

      id = R.id.submitGPUButton;
      Button submitGPUButton = ViewBindings.findChildViewById(rootView, id);
      if (submitGPUButton == null) {
        break missingId;
      }

      id = R.id.textAddGPU;
      TextView textAddGPU = ViewBindings.findChildViewById(rootView, id);
      if (textAddGPU == null) {
        break missingId;
      }

      id = R.id.textCoreFrequency;
      TextView textCoreFrequency = ViewBindings.findChildViewById(rootView, id);
      if (textCoreFrequency == null) {
        break missingId;
      }

      id = R.id.textGPUName;
      TextView textGPUName = ViewBindings.findChildViewById(rootView, id);
      if (textGPUName == null) {
        break missingId;
      }

      id = R.id.textGPUPrice;
      TextView textGPUPrice = ViewBindings.findChildViewById(rootView, id);
      if (textGPUPrice == null) {
        break missingId;
      }

      id = R.id.textMemoryFrequency;
      TextView textMemoryFrequency = ViewBindings.findChildViewById(rootView, id);
      if (textMemoryFrequency == null) {
        break missingId;
      }

      id = R.id.textVRAM;
      TextView textVRAM = ViewBindings.findChildViewById(rootView, id);
      if (textVRAM == null) {
        break missingId;
      }

      return new ActivityAddGpuactivityBinding((ConstraintLayout) rootView, cancelGPUButton,
          editCoreFrequency, editGPUName, editGPUPrice, editMemoryFrequency, editVRAM,
          submitGPUButton, textAddGPU, textCoreFrequency, textGPUName, textGPUPrice,
          textMemoryFrequency, textVRAM);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
